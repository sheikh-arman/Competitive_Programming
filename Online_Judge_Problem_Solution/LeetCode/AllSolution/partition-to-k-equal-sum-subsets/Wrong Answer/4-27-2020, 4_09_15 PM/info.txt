{"id":330865729,"lang":"cpp","time":"2 years, 3 months","timestamp":1587982155,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/330865729/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"N/A","code":"class Solution\n{\n\npublic:\n    typedef long long int ll;\n    ll cnt;\n    ll n,sum=0,c,bit;\n    vector<ll>V;\n    ll Set(ll n,ll pos)\n    {\n        return n|1<<pos;\n    }\n    bool view(ll n,ll pos)\n    {\n        return n&(1<<pos);\n    }\n    void sub_sum(ll i,ll val,ll bitmask,ll kk)\n    {\n        if(i>=n)\n        {\n            if(val==sum/kk)\n            {\n                ll ck=1;\n                for(ll j=0; j<n; j++)\n                {\n                    if(view(bitmask,j)==1&&view(bit,j)==1)\n                    {\n                        ck=0;\n                        break;\n                    }\n                }\n                if(ck)\n                {\n                    cnt++;\n                    bit=bit|bitmask;\n                }\n            }\n            return;\n        }\n        sub_sum(i+1,val,bitmask,kk);\n        if(val+V[i]<=sum/kk)\n            sub_sum(i+1,val+V[i],bitmask=Set(bitmask,i),kk);\n    }\n\n    bool canPartitionKSubsets(vector<int>& nums, int k)\n    {\n        n=nums.size();\n        ll kk=(ll)k;\n        sum=bit=0;\n        V.clear();\n        for(ll i=0; i<n; i++)\n        {\n            V.push_back(nums[i]);\n            sum+=nums[i];\n        }\n        sort(V.begin(),V.end());\n        if(sum%kk!=0)\n        {\n            return 0;\n        }\n        cnt=0;\n        sub_sum(0,0,0,kk);\n        if(cnt==kk)\n        {\n            return 1;\n        }\n        else\n        {\n            return 0;\n        }\n\n    }\n};","compare_result":"11101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets"}