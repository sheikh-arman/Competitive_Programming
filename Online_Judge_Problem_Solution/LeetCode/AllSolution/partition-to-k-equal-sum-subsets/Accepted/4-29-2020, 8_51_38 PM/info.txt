{"id":331844232,"lang":"cpp","time":"2 years, 3 months","timestamp":1588171898,"status_display":"Accepted","runtime":"660 ms","url":"/submissions/detail/331844232/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"31.4 MB","code":"class Solution\n{\n\npublic:\n    typedef long long int ll;\n#define N 17\n    ll dp[N+2][(1<<N)+10];\n    ll n,kk,sum=0;\n    vector<ll>V;\n    ll Set(ll m,ll pos)\n    {\n        return m|1<<pos;\n    }\n    bool view(ll m,ll pos)\n    {\n        return m&(1<<pos);\n    }\n    bool sub_sum(ll i,ll val,ll bitmask)\n    {\n        if(i>=n)\n        {\n            //cout<<val<<\" \"<<bitmask<<\" test\\n\";\n//        for(ll k=0;k<n;k++){\n//            cout<<view(bitmask,k)<< \" \";\n//        }\n            //cout<<\" t\\n\";\n            if(bitmask==pow(2,n)-1)\n            {\n                return dp[i][bitmask]=1;\n            }\n            else if(val==sum/kk)\n            {\n                dp[i][bitmask]=sub_sum(0,0,bitmask);\n                return dp[i][bitmask];\n            }\n            else\n                return dp[i][bitmask]=0;\n        }\n        if(dp[i][bitmask]!=-1)\n        {\n            return dp[i][bitmask];\n        }\n        ll ans1=0,ans2=0;\n        ans1=sub_sum(i+1,val,bitmask);\n        if(V[i]+val<=sum/kk)\n        {\n            if(view(bitmask,i)==0)\n            {\n                ans2=sub_sum(i+1,val+V[i],Set(bitmask,i));\n            }\n        }\n        dp[i][bitmask]=ans1|ans2;\n        return dp[i][bitmask];\n    }\n\n    bool canPartitionKSubsets(vector<int>& nums, int k)\n    {\n        n=nums.size();\n        kk=(ll)k;\n        sum=0;\n        V.clear();\n        for(ll i=0; i<=n; i++)\n        {\n            for(ll j=0; j<=(1<<N); j++)\n            {\n                dp[i][j]=-1;\n            }\n        }\n        for(ll i=0; i<n; i++)\n        {\n            V.push_back(nums[i]);\n            sum+=nums[i];\n        }\n        if(sum%kk!=0)\n        {\n            return 0;\n        }\n        bool ans=sub_sum(0,0,0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets"}