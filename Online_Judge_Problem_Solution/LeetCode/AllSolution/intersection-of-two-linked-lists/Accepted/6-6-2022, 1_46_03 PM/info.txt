{"id":715558618,"lang":"cpp","time":"2Â months","timestamp":1654501563,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/715558618/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode *rootA=headA;\n        ListNode *rootB=headB;\n        int cntA=0,cntB=0;\n        while(rootA->next!=NULL){\n            rootA=rootA->next;\n            cntA++;\n        }\n        while(rootB->next!=NULL){\n            rootB=rootB->next;\n            cntB++;\n        }\n        rootA=headA;\n        rootB=headB;\n        if(cntA>cntB){\n            while(cntA>cntB){\n                cntA--;\n                rootA=rootA->next;\n            }\n        }\n        else if(cntA<cntB){\n            while(cntB>cntA){\n                cntB--;\n                rootB=rootB->next;\n            }\n        }\n        while(rootA!=rootB){\n            rootA=rootA->next;\n            rootB=rootB->next;\n        }\n        return rootA;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}