{"id":715840460,"lang":"cpp","time":"2Â months","timestamp":1654532597,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/715840460/","is_pending":"Not Pending","title":"Root Equals Sum of Children","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool sol(TreeNode* root){\n        if(root==NULL||root->left==NULL){\n            return true;\n        }\n        int ans=1;\n        TreeNode* left=root->left;\n        TreeNode* right=root->right;\n        \n        if(root->val==(left->val+right->val)){\n            ans&=sol(left);\n            ans&=sol(right);\n        }\n        else{\n            return false;\n        }\n        return ans;\n    }\npublic:\n    bool checkTree(TreeNode* root) {\n        bool ans=sol(root);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"root-equals-sum-of-children"}