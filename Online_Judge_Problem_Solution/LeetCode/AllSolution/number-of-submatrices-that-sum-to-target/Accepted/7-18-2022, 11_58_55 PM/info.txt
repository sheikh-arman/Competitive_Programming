{"id":750423766,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1658167135,"status_display":"Accepted","runtime":"1306 ms","url":"/submissions/detail/750423766/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"162.2 MB","code":"class Solution {\npublic:\n\nint subarraySum(vector<int>& nums, int k){ // 560. Subarray Sum Equals K\n    int cnt = 0, sum = 0;\n    int n = nums.size();\n    unordered_map<int, int>mp;\n    mp.insert({0, 1});\n    for(int i = 0; i < n; i++){\n        sum += nums[i];\n        int rem_sum = sum - k;\n        if(mp.count(rem_sum))\n            cnt += mp[rem_sum];\n        mp[sum]++;\n    }\n    return cnt;\n}\n\nint numSubmatrixSumTarget(vector<vector<int>>& mat, int target) {\n    int count = 0;\n    for(int i = 0; i < mat.size(); i++){\n        \n        vector<int> temp(mat[0].size(), 0); // temp.size() = size of columns\n        \n        for(int j = i; j < mat.size(); j++){\n            for(int k = 0; k < mat[0].size(); k++){ // go for all columns\n                temp[k] += mat[j][k];\n            }\n            count += subarraySum(temp, target);\n        }\n        \n    }\n    return count;\n}\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}