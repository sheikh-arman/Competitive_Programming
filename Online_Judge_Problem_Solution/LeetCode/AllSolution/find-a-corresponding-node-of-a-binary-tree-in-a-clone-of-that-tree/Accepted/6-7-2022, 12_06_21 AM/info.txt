{"id":715912638,"lang":"cpp","time":"2Â months","timestamp":1654538781,"status_display":"Accepted","runtime":"945 ms","url":"/submissions/detail/715912638/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"163.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution\n{\npublic:\n    TreeNode* ans=new TreeNode();\n    void sol(TreeNode* root, TreeNode* target)\n    {\n        if(root->val==target->val)\n        {\n            ans=root;\n            return;\n        }\n        if(root->left!=NULL)\n        {\n            sol(root->left,target);\n        }\n        if(root->right!=NULL)\n        {\n            sol(root->right,target);\n        }\n    }\n     void sol2(TreeNode* root, TreeNode* target)\n    {\n        if(root->val==target->val)\n        {\n            ans=root;\n            return;\n        }\n        if(root->left!=NULL)\n        {\n            sol2(root->left,target);\n        }\n        if(root->right!=NULL)\n        {\n            sol2(root->right,target);\n        }\n    }\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target)\n    {\n        sol(cloned,target);\n        //sol2(cloned,target);\n        return ans;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}