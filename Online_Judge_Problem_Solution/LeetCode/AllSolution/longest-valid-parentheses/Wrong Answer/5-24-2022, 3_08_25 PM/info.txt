{"id":706086693,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1653383305,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/706086693/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"N/A","code":"class Solution\n{\npublic:\n    int longestValidParentheses(string s)\n    {\n        int ans=0,current=0,prev=0;\n        stack<char>stk;\n        vector<int>siz,pos;\n        for(int i=0; s[i]!='\\0'; i++)\n        {\n            if(s[i]=='(')\n            {\n                stk.push(s[i]);\n            }\n            else\n            {\n                if(stk.size()>0)\n                {\n                    stk.pop();\n                    current+=2;\n                    siz.push_back(current);\n                    pos.push_back(i);\n                    if(stk.empty())\n                    {\n                        current=0;\n                    }\n                }\n            }\n        }\n        int si=siz.size();\n        if(si>0)\n        {\n            int pre=pos[si-1]-siz[si-1];\n            ans=siz[si-1];\n            current=ans;\n            for(int i=si-2; i>=0; i--)\n            {\n                if(pos[i]>pre)\n                {\n                    continue;\n                }\n                if(pos[i]==pre)\n                {\n                    current+=siz[i];\n                    pre=pos[i]-siz[i];\n                    ans=max(ans,current);\n                }\n                else\n                {\n                    pre=pos[i]-siz[i];\n                    current=siz[i];\n                    ans=max(ans,current);\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111110111111101111110111111111111111111011111111101101111111111111111011111111111111100111011111111000001110100000011010110110011011101010101100000111011100000101101011110010011110011000001000110101","title_slug":"longest-valid-parentheses"}