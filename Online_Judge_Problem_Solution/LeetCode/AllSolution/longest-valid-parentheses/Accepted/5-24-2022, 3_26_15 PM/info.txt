{"id":706094263,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1653384375,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/706094263/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"8.3 MB","code":"class Solution\n{\npublic:\n    int longestValidParentheses(string s)\n    {\n        int ans=0,current=0,prev=0;\n        stack<pair<char,int>>stk;\n        vector<int>siz,pos;\n        for(int i=0; s[i]!='\\0'; i++)\n        {\n            if(s[i]=='(')\n            {\n                stk.push({s[i],i});\n            }\n            else\n            {\n                if(stk.size()>0)\n                {\n                    pair<char,int> pa=stk.top();\n                    stk.pop();\n                    siz.push_back((i-pa.second)+1);\n                    pos.push_back(i);\n                    \n                }\n            }\n        }\n        int si=siz.size();\n        if(si>0)\n        {\n            \n            int pre=pos[si-1]-siz[si-1];\n            ans=siz[si-1];\n            current=ans;\n            for(int i=si-2; i>=0; i--)\n            {\n                if(pos[i]>pre)\n                {\n                    continue;\n                }\n                if(pos[i]==pre)\n                {\n                    current+=siz[i];\n                    pre=pos[i]-siz[i];\n                    ans=max(ans,current);\n                }\n                else\n                {\n                    pre=pos[i]-siz[i];\n                    current=siz[i];\n                    ans=max(ans,current);\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}