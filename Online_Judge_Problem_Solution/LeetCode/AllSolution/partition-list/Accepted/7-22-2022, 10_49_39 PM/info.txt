{"id":753873867,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1658508579,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/753873867/","is_pending":"Not Pending","title":"Partition List","memory":"10.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        int ck=0;\n        int ck2=0;\n        ListNode* root=new ListNode();\n        ListNode* root2=new ListNode();\n        ListNode* curr=new ListNode();\n        ListNode* small=new ListNode();\n        ListNode* big=new ListNode();\n        root=head;\n        curr=head;\n        while(curr!=NULL){\n            if(curr->val<x){\n                if(ck==0){\n                    ck=1;\n                    small->val=curr->val;\n                    root=small;\n                }\n                else{\n                    small->next=curr;\n                    small=small->next;\n                }\n            }\n            else{\n                if(ck2==0){\n                    ck2=1;\n                    big->val=curr->val;\n                    if(ck==0)\n                       root=big;\n                    root2=big;\n                }\n                else{\n                    big->next=curr;\n                    big=big->next;\n                }\n            }\n            curr=curr->next;\n        }\n        big->next=NULL;\n        small->next=NULL;\n        if(ck){\n            if(ck2)\n            small->next=root2;\n        }\n        return root;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}