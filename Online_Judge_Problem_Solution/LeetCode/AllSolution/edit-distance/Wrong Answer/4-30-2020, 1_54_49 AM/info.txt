{"id":331950835,"lang":"cpp","time":"2 years, 3 months","timestamp":1588190089,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/331950835/","is_pending":"Not Pending","title":"Edit Distance","memory":"N/A","code":"/*\n    Sk arman Hossain\n    University of Barisal\n\n    Problem: divide array into k sub array of equal sum\n    Solution : bitmask dp\n */\nclass Solution\n{\npublic:\n    typedef long long int ll;\n    ll dp[1000][1000],len1,len2;\n    string s1,s2;\n    ll edit_distance(ll i,ll j)\n    {\n        if(i>=len1||j>=len2)\n        {\n            return dp[i][j]=max(len1-i,len2-j);\n        }\n        if(dp[i][j]!=-1)\n        {\n            return dp[i][j];\n        }\n        ll ans1=LONG_MAX,ans2=LONG_MAX,ans3=LONG_MAX;\n        if(s1[i]==s2[j])\n        {\n            ans1=edit_distance(i+1,j+1);\n        }\n        else\n        {\n            ans2=1+edit_distance(i+1,j+1);\n            ans3=1+edit_distance(i+1,j);\n        }\n        return dp[i][j]=min(ans1,min(ans2,ans3));\n    }\n    int minDistance(string word1, string word2)\n    {\n        len1=word1.size();\n        len2=word2.size();\n        s1=word1;\n        s2=word2;\n        for(ll i=0; i<=len1; i++)\n        {\n            for(ll j=0; j<=len2; j++)\n            {\n                dp[i][j]=-1;\n            }\n        }\n        ll ans=edit_distance(0,0);\n        return ans;\n    }\n};\n","compare_resulttitle_slug":"edit-distance"}