{"id":710460500,"lang":"cpp","time":"2 months, 1 week","timestamp":1653914141,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/710460500/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"N/A","code":"class Solution {\npublic:\n    bool mul(unsigned mid,unsigned divisor,unsigned dividend){\n        unsigned num=mid;\n        if(mid<divisor){\n            swap(mid,divisor);\n        }\n        unsigned res=0,ck=0;\n        while(divisor>0){\n            if(divisor&1){\n                res+=mid;\n                divisor--;ck=1;\n            }\n            if(divisor)\n            mid=mid<<1;\n            if(mid<0||res>dividend)return 0;\n            divisor=divisor>>1;\n        }\n      return res<=dividend;\n    }\n    int divide(int dividend, int divisor) {\n        if(dividend==0){\n            return 0;\n        }\n        if(divisor==-1){\n            if(dividend<=-2147483647){\n                return 2147483647;\n            }\n        }\n        if(divisor==1){\n            return dividend;\n        }\n        int sign=0;\n        if((dividend<0||divisor<0)&&!(dividend<0&&divisor<0)){\n            sign=1;\n        }\n        unsigned  new_dividend=abs(dividend);\n        unsigned new_divisor=abs(divisor);\n        unsigned left=0,right=dividend;\n        while(left<=right){\n            unsigned mid=left+((right-left)>>1);\n            if(mul(mid,new_divisor,new_dividend)){\n                left=mid+1;\n            }\n            else{\n                right=mid-1;\n            }\n        }\n        int ans=right;\n        if(sign&&right>0){\n            ans=~ans+1;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111101111101110111110111101011110111111111100011100010111111011111101101100111101111011110111111101101111010011100100110110011111110001011010100001111000101001101111110111011011011111000101011111101100110101011100111011110010111101111100110000111011001110100000011010001001101110011110010100010100011111011000111101001110101101001010110111110000010010110001100000011111001001100000001110000001010111001001000000100011101010001100100111111000000000110100100100001000100110111101000000101111111111000000000000000000000000000100000100100010001000000100000011010100011000000001000000000000000000000000000000000000001001000000010000010000000100011111111101111111111111111111111010111111111101111011101111111111111101111111111111111111101111111011111111111111111011011111111111101111101111111011111011111011011110111111110111111111101111111111111111111111010110111111101111111111011111101110100110111111111111110111111110110111110111110001111011111111011111110111110111111111111100","title_slug":"divide-two-integers"}