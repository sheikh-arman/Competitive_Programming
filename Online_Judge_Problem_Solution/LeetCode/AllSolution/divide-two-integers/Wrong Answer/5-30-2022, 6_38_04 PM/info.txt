{"id":710461705,"lang":"cpp","time":"2 months, 1 week","timestamp":1653914284,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/710461705/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"N/A","code":"class Solution {\npublic:\n    bool mul(unsigned mid,unsigned divisor,unsigned dividend){\n        unsigned num=mid;\n        if(mid<divisor){\n            swap(mid,divisor);\n        }\n        unsigned res=0,ck=0;\n        while(divisor>0){\n            if(divisor&1){\n                res+=mid;\n                divisor--;ck=1;\n            }\n            if(divisor)\n            mid=mid<<1;\n            if(mid<0||res>dividend)return 0;\n            divisor=divisor>>1;\n        }\n      return res<=dividend;\n    }\n    int divide(int dividend, int divisor) {\n        if(dividend==0){\n            return 0;\n        }\n        if(divisor==-1){\n            if(dividend<=-2147483647){\n                return 2147483647;\n            }\n        }\n        if(divisor==1){\n            return dividend;\n        }\n        int sign=0;\n        if((dividend<0||divisor<0)&&!(dividend<0&&divisor<0)){\n            sign=1;\n        }\n        unsigned  new_dividend=abs(dividend);\n        unsigned new_divisor=abs(divisor);\n        unsigned left=0,right=dividend;\n        if(new_dividend<new_divisor){\n            return 0;\n        }\n        while(left<=right){\n            unsigned mid=left+((right-left)>>1);\n            if(mul(mid,new_divisor,new_dividend)){\n                left=mid+1;\n            }\n            else{\n                right=mid-1;\n            }\n        }\n        int ans=right;\n        if(sign&&right>0){\n            ans=~ans+1;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111101111111111111111011111111111111110011101111111111011111101101111111101111111111111111101111111011111101100110110011111110001111110100011111011101011101111111111011011011111000111011111111100110101111110111011110011111101111101110000111011001110111010011010001001101110111110110100111100011111111100111101001110111101001011111111110000010010110001101000111111001101101010011110001001010111001011001001100011101011001100100111111001110000110100110100001100100111111101000000101111111111000000000000000000000000000100000100100010001000000100000011010100011000000001000000000000000000000000000000000000001001000000010000010000000100011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111110111111111111110111111111111111111111111111111111111111011111111111110111111111111110","title_slug":"divide-two-integers"}