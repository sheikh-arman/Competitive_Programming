{"id":734287235,"lang":"cpp","time":"1 month, 1 week","timestamp":1656511364,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/734287235/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"12.4 MB","code":"class Solution {\npublic:\n    static bool comp(vector<int>& a, vector<int>& b){ //Comparator function for the logic of sort\n        if(a[0] == b[0]) return a[1] < b[1];\n        return a[0] > b[0];\n    }\n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {   \n        sort(people.begin(), people.end(), comp);  //Sorting the array according to comp function.\n        vector<vector<int>> ans;                   //to store the final array to be returned\n        for(auto man : people){\n            ans.insert(ans.begin()+man[1], man);   //Inserting the element at desired position.\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height"}