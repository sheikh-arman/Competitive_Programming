{"id":628363416,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1643215324,"status_display":"Accepted","runtime":"1002 ms","url":"/submissions/detail/628363416/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"41.3 MB","code":"class Solution {\npublic:\n    int mx;\n    map<int,int> rep,cnt;\n    int Find(int n){\n        return (rep[n]==n?n:rep[n]=Find(rep[n]));\n    }\n    void joint(int u,int v){\n        u=Find(u);\n        v=Find(v);\n        if(u!=v){\n            if(cnt[u]>=cnt[v]){\n                cnt[u]+=cnt[v];\n                mx=max(mx,cnt[u]);\n                rep[v]=u;\n            }\n            else{\n                cnt[v]+=cnt[u];\n                mx=max(mx,cnt[v]);\n                rep[u]=v;\n            }\n        }\n    }\n    int longestConsecutive(vector<int>& nums) {\n         rep.clear();cnt.clear();\n         mx=0;\n         if((int)nums.size())mx=1;\n         for(int i:nums){\n             rep[i]=i;\n             cnt[i]=1;\n         }   \n         for(int i:nums){\n             if(cnt[i-1]>0){\n                 joint(i-1,i);\n             }\n             if(cnt[i+1]>0){\n                 joint(i+1,i);\n             }\n         }\n         return mx;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}