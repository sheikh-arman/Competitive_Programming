{"id":723007337,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1655312661,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/723007337/","is_pending":"Not Pending","title":"Longest String Chain","memory":"13 MB","code":"class Solution {\npublic:\n    bool static cmp(string& s1,string& s2){\n        return s1.size()<s2.size();\n    }\n    bool ck(string s1,string s2){\n        int len2=s2.size();\n        int cnt = 0, cntr = 0;\n        for(int i = 0; i < s2.size(); i++){\n            if(s2[i] != s1[cnt++]){\n                cntr++; cnt--;\n            }\n        }\n        return cntr == 1;\n    }\n    int longestStrChain(vector<string>& words) {\n        int n=words.size();\n        sort(words.begin(),words.end(),cmp);\n        int dp[n+6];\n        for(int i=0;i<=n;i++){\n             dp[i]=1;\n        }\n        int ans=1;\n        for(int i=n-2;i>=0;i--){\n            int ma=0;\n            for(int j=i+1;j<n;j++){\n                 if(words[j].size()-words[i].size()>1){\n                      break;\n                }\n                if(words[j].size() == words[i].size())continue;\n                if(ck(words[i],words[j])){\n                    ma=max(ma,dp[j]);\n                }\n            }\n            dp[i]=ma+1;\n            ans=max(ans,dp[i]);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}