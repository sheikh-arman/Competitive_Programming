{"id":715970649,"lang":"cpp","time":"2Â months","timestamp":1654544067,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/715970649/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"9.9 MB","code":"class Solution {\npublic:\n    int dp[202][202],N,M;\n    int grids(int i,int j,vector<vector<int>>& grid)\n    {\n        if(i>=N||j>=M)\n        {\n            return INT_MAX;\n        }\n        if(i==N-1&&j==M-1)\n        {\n            return grid[i][j];\n        }\n        if(dp[i][j]!=-1)\n        {\n            return dp[i][j];\n        }\n        return dp[i][j]=min(grids(i+1,j,grid),grids(i,j+1,grid))+grid[i][j];\n    }\n    int minPathSum(vector<vector<int>>& grid) {\n        N=grid.size();\n        M=grid[0].size();\n        for(int i=0; i<=N; i++)\n        {\n            for(int j=0; j<=M; j++)\n            {\n                dp[i][j]=-1;\n            }\n        }\n        int ans=grids(0,0,grid);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}