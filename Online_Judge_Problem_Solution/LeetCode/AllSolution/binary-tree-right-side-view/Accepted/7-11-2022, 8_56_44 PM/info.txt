{"id":744334135,"lang":"cpp","time":"1Â month","timestamp":1657551404,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/744334135/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> ans;\n        auto dfs = [&](auto&& dfs, TreeNode* now, int d) {\n            if (now == nullptr) return;\n            if (ans.size() <= d) ans.push_back(now->val);\n            dfs(dfs, now->right, d + 1);\n            dfs(dfs, now->left, d + 1);\n        };\n        dfs(dfs, root, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}