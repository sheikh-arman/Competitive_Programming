{"id":769863888,"lang":"cpp","time":"23 hours, 33 minutes","timestamp":1660101311,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/769863888/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"20.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void sol(TreeNode* root, int b, int e, vector<int>& nums){\n        if(b>=e){\n            if(b==e){\n                root->val=nums[b];\n            }\n            return; \n        }\n        int rt=(b+e)/2;\n        root->val=nums[rt];\n        if(b<=rt-1){\n            TreeNode* lft=new TreeNode();\n            root->left=lft;\n            sol(lft,b,rt-1,nums);\n        }\n        if(rt+1<=e){\n            TreeNode* rht=new TreeNode();\n            root->right=rht;\n            sol(rht,rt+1,e,nums);\n        }\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        TreeNode* root=new TreeNode();\n        int n=nums.size();\n        sol(root,0,n-1,nums);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}