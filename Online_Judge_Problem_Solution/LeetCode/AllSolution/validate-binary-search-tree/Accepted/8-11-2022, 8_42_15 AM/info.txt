{"id":770700914,"lang":"cpp","time":"6Â minutes","timestamp":1660185735,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/770700914/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\ntypedef long long int ll;\nclass Solution {\npublic:\n    bool rec(TreeNode* root,ll l,ll r){\n        if(root==NULL){\n            return 1;\n        }\n        //cout<<root->val<<\" x\\n\";\n        bool ans=1;\n        TreeNode* left=root->left;\n        TreeNode* right=root->right;\n        if(left!=NULL){\n            ll tm_r=min(r,(ll)root->val);\n            if(left->val>l&&left->val<tm_r){\n                ans&=rec(left,l,tm_r);\n            }\n            else{\n                ans=0;\n            }//cout<<left->val<<\" lft\\n\";\n        }\n        if(right!=NULL){\n            ll tm_l=max(l,(ll)root->val);\n            //cout<<right->val<<\" \"<<l<<\" \"<<r<<\" x\\n\";\n            if(right->val>tm_l && right->val<r){\n                ans&=rec(right,tm_l,r);\n               // cout<<\"hh t\\n\";\n            }\n            else{\n                ans=0;\n            }\n            //cout<<right->val<<\" rht\\n\";\n        }\n        return ans;\n    }\n    bool isValidBST(TreeNode* root) {\n        bool ans=rec(root,LONG_LONG_MIN,LONG_LONG_MAX);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}