{"id":717255875,"lang":"cpp","time":"2Â months","timestamp":1654686554,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/717255875/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool rec(TreeNode* root,int val,int ck){\n        if(root==NULL){\n            return 1;\n        }\n        bool ans=1;\n        TreeNode* left=root->left;\n        TreeNode* right=root->right;\n        if(left!=NULL){\n            if(left->val>=root->val){\n                ans=0;\n            }\n            else{\n                if(!ck){\n                    if(left->val<=val)ans=0;\n                }\n                ans&=rec(left,root->val,0);\n            }\n        }\n        if(right!=NULL){\n            if(right->val<=root->val){\n                ans=0;\n            }\n            else{\n                if(!ck){\n                    if(right->val>=val)ans=0;\n                }\n                ans&=rec(right,root->val,0);\n            }\n        }\n        return ans;\n    }\n    bool isValidBST(TreeNode* root) {\n        bool ans=rec(root,0,1);\n        return ans;\n    }\n};","compare_result":"11111111111111110110111000001011000100011011111111100110111011111111111111011110","title_slug":"validate-binary-search-tree"}