{"id":752794496,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1658398099,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/752794496/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        ListNode* root=new ListNode();\n        root=head;\n        ListNode* cur=new ListNode();\n        cur=root;\n        ListNode* breakPoint=new ListNode();\n        ListNode* rev=new ListNode();\n        ListNode* rev_save=new ListNode();\n        int cnt=0,ck=0;\n        while(cur!=NULL){\n            cnt++;\n            if(cnt==left){\n                ck=1;\n            }\n            if(ck==0){\n                breakPoint=cur;\n            }\n            if(cnt==left){\n                rev=cur;\n                rev_save=cur;\n            }\n            else if(cnt>left){\n                ListNode* tm=new ListNode();\n                tm->val=cur->val;\n                tm->next=rev;\n                rev=tm;\n            }\n            cur=cur->next;\n            if(cnt==right)break; \n            \n        }\n        breakPoint->next=rev;\n        if(left==1)root=rev;\n        while(cur!=NULL){\n            rev_save->next=cur;\n            cur=cur->next;\n        }\n        rev_save->next=NULL;\n        return root;\n    }\n};","compare_result":"01011001011011101001001110101010011010000101","title_slug":"reverse-linked-list-ii"}