{"id":758030700,"lang":"cpp","time":"2Â weeks","timestamp":1658918692,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/758030700/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.6 MB","code":"class Solution {\nprivate:\n    TreeNode* preOrderFlatten(TreeNode *node, TreeNode *appendum){\n        if(node==nullptr)\n            return appendum;\n        \n        TreeNode *left_subtree = node->left;\n        TreeNode *right_subtree = node->right;\n        \n        node->left = nullptr;\n        TreeNode *flatright = preOrderFlatten(right_subtree, appendum);\n        node->right = preOrderFlatten(left_subtree, flatright);\n        return node;\n    }\npublic:\n    void flatten(TreeNode* root) {\n        preOrderFlatten(root, nullptr);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}