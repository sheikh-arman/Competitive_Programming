{"id":720264461,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1655016880,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/720264461/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"N/A","code":"class Solution {\npublic:\n    int rep[100010];\n    int Find(int node){\n        return (node==rep[node]?node:rep[node]=Find(rep[node]));\n    }\n    bool joint(int u,int v){\n        u=Find(u);\n        v=Find(v);\n        if(u!=v){\n            rep[u]=v;\n            return 1;\n        }\n        else{\n            return 0;\n        }\n    }\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        int n=points.size();\n        vector<pair<int,pair<int,int>>>V;\n        for(int i=0;i<n-1;i++){\n            for(int j=i+1;j<n;j++){\n                int disx=abs(points[i][0]-points[j][0]);\n                int disy=abs(points[i][1]-points[j][1]);\n                V.push_back({disx+disy,{i,j}});\n            }\n        }\n        sort(V.begin(),V.end());\n        int sum=0;\n        n=V.size();\n        for(int i=0;i<=n;i++){\n            rep[i]=i;\n        }\n        for(int i=0;i<n;i++){\n            if(joint(V[i].second.first,V[i].second.second)){\n                sum+=V[i].first;\n            }   \n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111100000000","title_slug":"min-cost-to-connect-all-points"}