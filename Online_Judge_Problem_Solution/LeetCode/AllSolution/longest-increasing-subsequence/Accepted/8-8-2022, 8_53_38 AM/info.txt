{"id":768053617,"lang":"cpp","time":"2 days, 23 hours","timestamp":1659927218,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/768053617/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":" class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        vector<int>V;\n        int siz=nums.size();\n        for(int i=0;i<siz;i++){\n            int pos=lower_bound(V.begin(),V.end(),nums[i])-V.begin();\n            int s=V.size();\n            if(pos>=s){\n                V.push_back(nums[i]);\n            }\n            else{\n                V[pos]=nums[i];\n            }\n        }\n        int ans=V.size();\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}