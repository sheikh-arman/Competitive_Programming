{"id":747987433,"lang":"cpp","time":"3 weeks, 5 days","timestamp":1657910388,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/747987433/","is_pending":"Not Pending","title":"Max Area of Island","memory":"N/A","code":"void dfs(int i,int j,vector<vector<int>>&vis, vector<vector<int>>& grid,int &ans,int &area){\n   //Base case\n    if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size()  || grid[i][j]==0 ){\n        return ;\n    }\n    if(vis[i][j]==1)return;\n  \n    //if node is not visited mark it visit and travel the four adjacent sites\n    if(i>=0 && i<grid.size() && j>=0 && j<grid[0].size()  && grid[i][j]==1 && vis[i][j]==0){\n       \n        vis[i][j]=1;\n       \n        area++;\n      dfs(i,j+1,vis,grid,ans,area);\n      dfs(i-1,j,vis,grid,ans,area);\n      dfs(i,j-1,vis,grid,ans,area);\n      dfs(i+1,j,vis,grid,ans,area);\n        // put ans equal to max of area obtained and ans\n        ans=max(area,ans);\n    }\n    \n}\n\nint maxAreaOfIsland(vector<vector<int>>& grid) {\n    \n    \n    int ans=0;\n   //intialise the vector to store the visited nodes\n    vector<vector<int>>vis(grid.size(),vector<int>(grid[0].size(),0));\n    \n    for(int i=0;i<grid.size();i++){\n        for(int j=0;j<grid[0].size();j++){\n           \n            if(vis[i][j]==0  && grid[i][j]==1){\n               //call for dfs \n                int area=0;\n                dfs(i,j,vis,grid,ans,area);\n                \n                \n                \n            }\n        }\n    }\n\n    return ans;\n}\n};","compare_result":null,"title_slug":"max-area-of-island"}