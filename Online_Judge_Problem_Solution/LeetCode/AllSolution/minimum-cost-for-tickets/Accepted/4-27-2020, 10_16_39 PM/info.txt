{"id":330967983,"lang":"cpp","time":"2 years, 3 months","timestamp":1588004199,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/330967983/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"6.5 MB","code":"/*\n    Sk arman Hossain\n    University of Barisal\n\n    Problem : Leetcode_983.Minimum_Cost_For_Tickets\n    Solution : Dynamic Programming(Recursive)\n */\nclass Solution\n{\npublic:\n    typedef long long int ll ;\n#define N 400\n    ll dp[N+10];\nll day[10]={1,7,30};\nll cost[10];\nll ar[N+10],n;\nll ticket_cost(ll i){\n    if(i>365){\n            return dp[i]=0;\n    }\n    if(dp[i]!=-1){\n        return dp[i];\n    }\n    ll ans1=LONG_MAX;\n    ll ans2=LONG_MAX;\n    ll ans3=LONG_MAX;\n    if(ar[i]){\n        ans1=cost[0]+ticket_cost(i+1);\n        ans2=cost[1]+ticket_cost(i+7);\n        ans3=cost[2]+ticket_cost(i+30);\n    }\n    else{\n        ans1=ticket_cost(i+1);\n    }\n    return  dp[i]=min(ans1,min(ans2,ans3));\n   // return dp[i];\n}\n    int mincostTickets(vector<int>& days, vector<int>& costs)\n    {\n        n=days.size();\n        cost[0]=costs[0];\n        cost[1]=costs[1];\n        cost[2]=costs[2];\n        for(ll i=0; i<n; i++)\n        {\n            ar[days[i]]=1;\n        }\n        for(ll i=0;i<=366;i++){\n                dp[i]=-1;\n        }\n        ll ans=ticket_cost(1);\n        return (int)ans;\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets"}