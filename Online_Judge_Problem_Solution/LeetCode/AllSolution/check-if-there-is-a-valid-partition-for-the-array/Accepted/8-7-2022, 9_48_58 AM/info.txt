{"id":767220724,"lang":"cpp","time":"3 days, 22 hours","timestamp":1659844138,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/767220724/","is_pending":"Not Pending","title":"Check if There is a Valid Partition For The Array","memory":"87.4 MB","code":"class Solution {\npublic:\n    int n;\n    int mem[100010];\n    bool dp(int i,vector<int>& nums){\n        if(i>=n){\n            return 1;\n        }\n        if(mem[i]!=-1){\n            return (bool)mem[i];\n        }\n        bool ans=0;\n        if(n-i>2){\n            if(nums[i]==nums[i+1]&&nums[i]==nums[i+2]){\n                ans|=dp(i+3,nums);\n            }\n            else if(nums[i]==nums[i+1]-1&&nums[i]==nums[i+2]-2){\n                ans|=dp(i+3,nums);\n            }\n        }\n        if(n-i>=2){\n            if(nums[i]==nums[i+1]){\n                ans|=dp(i+2,nums);\n            }\n        }\n        return mem[i]=(int)ans;\n    }\n    bool validPartition(vector<int>& nums) {\n        n=nums.size();\n        for(int i=0;i<=n;i++){\n            mem[i]=-1;\n        }\n        bool ans=dp(0,nums);\n        return ans;\n    }\n};\n// 4 4 4 5 6 6 6\n//[579611,579611,579611,731172,731172,496074,496074,496074,151416,151416,151416]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-there-is-a-valid-partition-for-the-array"}