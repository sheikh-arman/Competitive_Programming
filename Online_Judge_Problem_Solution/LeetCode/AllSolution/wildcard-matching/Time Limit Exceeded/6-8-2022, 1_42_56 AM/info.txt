{"id":716784542,"lang":"cpp","time":"2Â months","timestamp":1654630976,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/716784542/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\npublic:\n    int mem[2010][2010],n,m,tm_m;\n    string str,pat;\n    int dp(int i,int j){\n        if(i>=n&&j>=tm_m){\n            return 1;\n        }\n        if(i>=n||j>=m){\n            return 0;\n        }\n        if(mem[i][j]!=-1){\n            return mem[i][j];\n        }\n        int ans=0;\n        if(str[i]==pat[j]||pat[j]=='?'){\n            ans=dp(i+1,j+1);\n        }\n       else if(pat[j]=='*'){\n            ans|=dp(i+1,j);\n            ans|=dp(i,j+1);\n            ans|=dp(i+1,j+1);\n        }\n        return mem[i][j]=ans;\n    }\n    bool isMatch(string s, string p) {\n        n=s.size();\n        m=p.size();\n        tm_m=m;\n        str=s;\n        pat=p;\n        while(tm_m>0){\n            if(pat[tm_m-1]=='*')tm_m--;\n            else break;\n        }\n        if(tm_m==0&&(int)pat.size()){\n            return 1;\n        }\n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=m;j++){\n                mem[i][j]=-1;\n            }\n        }\n        int ans=dp(0,0);\n        return ans>0;\n    }\n};","compare_resulttitle_slug":"wildcard-matching"}