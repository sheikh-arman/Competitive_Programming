{"id":716779927,"lang":"cpp","time":"2Â months","timestamp":1654630500,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/716779927/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\npublic:\n    int mem[2010][2010],n,m;\n    string str,pat;\n    int dp(int i,int j){\n        if(i>=n&&j>=m){\n            return 1;\n        }\n        if(i>=n||j>=m){\n            return 0;\n        }\n        if(mem[i][j]!=-1){\n            return mem[i][j];\n        }\n        int ans=0;\n        if(str[i]==pat[j]||pat[j]=='?'){\n            ans=dp(i+1,j+1);\n        }\n       else if(pat[j]=='*'){\n            ans+=dp(i+1,j);\n            ans+=dp(i,j+1);\n            ans+=dp(i+1,j+1);\n        }\n        return mem[i][j]=ans;\n    }\n    bool isMatch(string s, string p) {\n        n=s.size();\n        m=p.size();\n        str=s;\n        pat=p;\n        while(m>0){\n            if(pat[m-1]=='*')m--;\n            else break;\n        }\n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=m;j++){\n                mem[i][j]=-1;\n            }\n        }\n        int ans=dp(0,0);\n        return ans>0;\n    }\n};","compare_resulttitle_slug":"wildcard-matching"}